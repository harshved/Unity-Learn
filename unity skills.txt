Simple code editing and comprehension
  Comprehend and evaluate basic code
  Use an IDE to modify simple code.
Writing basic code
  Use common logic structures to control the execution of code. 
  Write code that utilizes the various Unity APIs
  Choose and correctly implement appropriate data types. 
  Write code that integrates into an existing system.
  Prototype new concepts.
  Use a code style that is efficient and easy to read.
  Recognize object-oriented vs. data-oriented code.
Debugging basic code
  Diagnose and fix code that compiles, but fails to perform as expected.
  Diagnose and fix common compilation bugs.
  Diagnose and fix compilation bugs related to Unityâ€™s Scripting API.
  Diagnose and fix the cause of an exception.
Programming theory
  Apply the principles of Inheritance and polymorphism to simplify code and make it more reusable. 
  Apply the principles of abstraction, encapsulation, and interfaces to make code more secure and usable.
  Apply the principles of Object Oriented Programming to write efficient, organized, and comprehensible code.
Programming User Interfaces
  Create user interfaces as defined in design documents.
  Write scripts for interactive user interfaces.
Writing intermediate code
  Create the scene flow in an application state. 
  Implement basic data persistence per session. 
  Refactor, restructure, and clean code for maximum efficiency. 
Source Control
  Use version control to maintain a project
   Apply basic practices of version control using Unity Collaborate 
Code optimization
  Profile and debug trivial performance issues